task :default => 'maglev:demo'

MAGLEV = (not ENV['MAGLEV_HOME'].nil?) and File.directory? ENV['MAGLEV_HOME']

if MAGLEV
  puts "RUBY is MagLev"
  RUBY = 'maglev-ruby'
  def maglev_using_rvm
    ENV['rvm_path'] != "" && (/^maglev/ =~ ENV['rvm_ruby_string']) == 0
  end
  # rackup can be in different places, need to find the correct one
  RACKUP = maglev_using_rvm ? \
    "#{ENV['BUNDLE_PATH']}/bin/rackup" : "#{ENV['MAGLEV_HOME']}/bin/bundle exec rackup"
else
  puts "RUBY is MRI"
  RUBY = 'ruby'
  RACKUP = 'rackup'
end

desc 'Run all tests'
task :test do
  Dir.glob('test/*_tests.rb').each do |t|
    sh "#{RUBY} -I lib #{t}"
  end
end

desc 'Run the benchmark against both MRI and MagLev (if available).'
task :bench do
  sh 'ruby -I lib test/benchmark.rb'
  sh 'maglev-ruby -I lib test/benchmark.rb' if defined? ENV['MAGLEV_HOME']
end

namespace :maglev do
  desc 'Run the migrations and the demo web app'
  task :demo => :migrate do
    sh "echo #{RACKUP} config.ru"
    sh "#{RACKUP} config.ru"
  end

  desc 'Commit the tree2d code and a tree of random data'
  task :commit do
    sh 'maglev-ruby -Ilib bin/commit.rb'
  end

  desc 'Create and commit the persistent data for the demo app.'
  task :migrate, :force do |t,args|
    sh "echo maglev-ruby -I lib migration.rb #{args.force}"
    sh "maglev-ruby -I lib migration.rb #{args.force}"
  end

  desc 'Time Maglev queries on committed data'
  task :query do
    sh 'maglev-ruby -Ilib bin/time_queries.rb'
  end

  desc 'Run a profiled version of the queries on maglev'
  task :gprof => :migrate do
    out = 'profile.out'
    sh "maglev-ruby -I lib bin/gprofq.rb > #{out}"
    puts "Profile data is in #{out}"
  end
end
