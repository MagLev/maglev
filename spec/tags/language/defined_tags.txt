fails:The defined? keyword when called with a method name having a module as receiver returns nil if the method is private
fails:The defined? keyword when called with a method name having a module as receiver returns nil if the method is protected
fails:The defined? keyword for an expression returns 'assignment' for assigning multiple variables
fails:The defined? keyword for an expression returns nil for an expression with != and an undefined method
fails:The defined? keyword for an expression returns nil for an expression with !~ and an undefined method
fails:The defined? keyword for an expression with logical connectives returns nil for an expression with '!' and an undefined method
fails:The defined? keyword for an expression with logical connectives returns nil for an expression with '!' and an unset class variable
fails:The defined? keyword for an expression with logical connectives returns nil for an expression with 'not' and an undefined method
fails:The defined? keyword for an expression with logical connectives returns nil for an expression with 'not' and an unset class variable
fails:The defined? keyword for an expression with logical connectives does not propagate an exception raised by a method in a 'not' expression
fails:The defined? keyword for an expression with logical connectives calls a method in a 'not' expression and returns 'expression'
fails:The defined? keyword for an expression with logical connectives returns nil for an expression with '&&/and' and an undefined method
fails:The defined? keyword for an expression with logical connectives returns nil for an expression with '&&/and' and an unset class variable
fails:The defined? keyword for an expression with logical connectives does not propagate an exception raised by a method in an '&&' expression
fails:The defined? keyword for an expression with logical connectives calls a method in an '&&' expression and returns 'expression'
fails:The defined? keyword for an expression with logical connectives does not propagate an exception raised by a method in an 'and' expression
fails:The defined? keyword for an expression with logical connectives calls a method in an 'and' expression and returns 'expression'
fails:The defined? keyword for an expression with logical connectives returns nil for an expression with '||/or' and an undefined method
fails:The defined? keyword for an expression with logical connectives returns nil for an expression with '||/or' and an unset class variable
fails:The defined? keyword for an expression with logical connectives does not propagate an exception raised by a method in an '||' expression
fails:The defined? keyword for an expression with logical connectives calls a method in an '||' expression and returns 'expression'
fails:The defined? keyword for an expression with logical connectives does not propagate an exception raised by a method in an 'or' expression
fails:The defined? keyword for an expression with logical connectives calls a method in an 'or' expression and returns 'expression'
fails:The defined? keyword for an expression with a dynamic String returns nil when the String contains a call to an undefined method
fails:The defined? keyword for an expression with a dynamic String calls the method in the String
fails:The defined? keyword for an expression with a dynamic String returns nil if any of the interpolated method calls are undefined
fails:The defined? keyword for an expression with a dynamic String returns nil and stops processing if any of the interpolated method calls are undefined
fails:The defined? keyword for an expression with a dynamic Regexp returns nil when the Regexp contains a call to an undefined method
fails:The defined? keyword for an expression with a dynamic Regexp calls the method in the Regexp
fails:The defined? keyword for an expression with a dynamic Regexp returns nil if any of the interpolated method calls are undefined
fails:The defined? keyword for an expression with a dynamic Regexp returns nil and stops processing if any of the interpolated method calls are undefined
fails:The defined? keyword for variables returns 'global-variable' for $!
fails:The defined? keyword for variables returns 'global-variable for $~
fails:The defined? keyword for variables returns 'local-variable(in-block)' when called with the name of a block local
fails:The defined? keyword for variables when a String does not match a Regexp returns 'global-variable' for $~
fails:The defined? keyword for variables when a String does not match a Regexp returns nil for $&
fails:The defined? keyword for variables when a String does not match a Regexp returns nil for $`
fails:The defined? keyword for variables when a String does not match a Regexp returns nil for $'
fails:The defined? keyword for variables when a String does not match a Regexp returns nil for $+
fails:The defined? keyword for variables when a String does not match a Regexp returns nil for $1-$9
fails:The defined? keyword for variables when a String matches a Regexp returns 'global-variable' for $~
fails:The defined? keyword for variables when a String matches a Regexp returns 'global-variable' for $&
fails:The defined? keyword for variables when a String matches a Regexp returns 'global-variable' for $`
fails:The defined? keyword for variables when a String matches a Regexp returns 'global-variable' for $'
fails:The defined? keyword for variables when a String matches a Regexp returns 'global-variable' for $+
fails:The defined? keyword for variables when a String matches a Regexp returns 'global-variable' for the capture references
fails:The defined? keyword for variables when a String matches a Regexp returns nil for non-captures
fails:The defined? keyword for variables when a Regexp does not match a String returns 'global-variable' for $~
fails:The defined? keyword for variables when a Regexp does not match a String returns nil for $&
fails:The defined? keyword for variables when a Regexp does not match a String returns nil for $`
fails:The defined? keyword for variables when a Regexp does not match a String returns nil for $'
fails:The defined? keyword for variables when a Regexp does not match a String returns nil for $+
fails:The defined? keyword for variables when a Regexp does not match a String returns nil for $1-$9
fails:The defined? keyword for variables when a Regexp matches a String returns 'global-variable' for $~
fails:The defined? keyword for variables when a Regexp matches a String returns 'global-variable' for $&
fails:The defined? keyword for variables when a Regexp matches a String returns 'global-variable' for $`
fails:The defined? keyword for variables when a Regexp matches a String returns 'global-variable' for $'
fails:The defined? keyword for variables when a Regexp matches a String returns 'global-variable' for $+
fails:The defined? keyword for variables when a Regexp matches a String returns 'global-variable' for the capture references
fails:The defined? keyword for variables when a Regexp matches a String returns nil for non-captures
fails:The defined? keyword for a scoped constant calls .const_missing if the parent to the constant is not defined
fails:The defined? keyword for a scoped constant calls .const_missing for the parent and uses the return constant for scope
fails:The defined? keyword for a scoped constant when the scope chain has undefined constants calls .const_missing for each constant in the scope chain and returns nil if any are not defined
fails:The defined? keyword for a scoped constant when the scope chain has undefined constants calls .const_missing and returns 'constant' if all constants are defined
fails:The defined? keyword for a top-level scoped constant calls .const_missing if the constant is not defined
fails:The defined? keyword for a top-level scoped constant calls .const_missing and uses the return constant for scope
fails:The defined? keyword for a top-level scoped constant when the scope chain has undefined constants calls .const_missing for each constant in the scope chain and returns nil if any are not defined
fails:The defined? keyword for a top-level scoped constant when the scope chain has undefined constants calls .const_missing and returns 'constant' if all constants are defined
fails:The defined? keyword for a module method call scoped constant returns nil if the outer scope constant in the receiver is not defined
fails:The defined? keyword for a module method call scoped constant returns nil if the scoped constant in the receiver is not defined
fails:The defined? keyword for yield returns nil if no block is passed to a method not taking a block parameter
fails:The defined? keyword for yield returns nil if no block is passed to a method taking a block parameter
fails:The defined? keyword for yield returns 'yield' if a block is passed to a method not taking a block parameter
fails:The defined? keyword for yield returns 'yield' if a block is passed to a method taking a block parameter
fails:The defined? keyword for super returns nil when a superclass undef's the method
fails:The defined? keyword for super for a method taking no arguments returns nil when no superclass method exists
fails:The defined? keyword for super for a method taking no arguments returns nil from a block when no superclass method exists
fails:The defined? keyword for super for a method taking no arguments returns nil from a #define_method when no superclass method exists
fails:The defined? keyword for super for a method taking no arguments returns nil from a block in a #define_method when no superclass method exists
fails:The defined? keyword for super for a method taking arguments returns nil when no superclass method exists
fails:The defined? keyword for super for a method taking arguments returns nil from a block when no superclass method exists
fails:The defined? keyword for super for a method taking arguments returns nil from a #define_method when no superclass method exists
fails:The defined? keyword for super for a method taking arguments returns nil from a block in a #define_method when no superclass method exists
fails:The defined? keyword when called with a method name having a local variable as receiver calls #respond_to_missing?
fails:The defined? keyword for an expression returns 'method' for an expression with '!='
fails:The defined? keyword for an expression returns 'method' for an expression with '!~'
fails:The defined? keyword for an expression with logical connectives returns nil for an expression with '!' and an unset global variable
fails:The defined? keyword for an expression with logical connectives returns nil for an expression with '!' and an unset instance variable
fails:The defined? keyword for an expression with logical connectives returns 'method' for a 'not' expression with a method
fails:The defined? keyword for an expression with logical connectives calls a method in a 'not' expression and returns 'method'
fails:The defined? keyword for an expression with logical connectives returns nil for an expression with 'not' and an unset global variable
fails:The defined? keyword for an expression with logical connectives returns nil for an expression with 'not' and an unset instance variable
fails:The defined? keyword for super for a method taking no arguments returns 'super' from a block when a superclass method exists
fails:The defined? keyword for super for a method taking no arguments returns 'super' from a block in a #define_method when a superclass method exists
fails:The defined? keyword for super for a method taking arguments returns 'super' from a block when a superclass method exists
fails:The defined? keyword for super for a method taking arguments returns 'super' from a block in a #define_method when a superclass method exists
