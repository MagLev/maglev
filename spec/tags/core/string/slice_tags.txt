fails:String#slice with index, length always taints resulting strings when self is tainted
fails:String#slice with Range always taints resulting strings when self is tainted
fails:String#slice with Range calls to_int on range arguments
fails:String#slice with Regexp always taints resulting strings when self or regexp is tainted
fails:String#slice with Regexp sets $~ to MatchData when there is a match and nil when there's none
fails:String#slice with Regexp, index returns the capture for the given index
fails:String#slice with Regexp, index always taints resulting strings when self or regexp is tainted
fails:String#slice with Regexp, index sets $~ to MatchData when there is a match and nil when there's none
fails:String#slice! with index, length always taints resulting strings when self is tainted
fails:String#slice! Range always taints resulting strings when self is tainted
fails:String#slice! with Regexp always taints resulting strings when self or regexp is tainted
fails:String#slice! with Regexp, index always taints resulting strings when self or regexp is tainted
fails:String#slice! with String returns a subclass instance when given a subclass instance
fails:String#slice returns nil if index is outside of self
fails:String#slice with Regexp, group returns the capture for the given name
fails:String#slice with Regexp, group returns the last capture for duplicate names
fails:String#slice with Regexp, group returns the innermost capture for nested duplicate names
fails:String#slice with Regexp, group always taints resulting strings when self or regexp is tainted
fails:String#slice with Regexp, group raises an IndexError if there is no capture for the given name
fails:String#slice with Regexp, group raises an IndexError when given the empty String as a group name
fails:String#slice with Regexp, group returns subclass instances
fails:String#slice with Regexp, group sets $~ to MatchData when there is a match and nil when there's none
fails:String#slice! with index raises a RuntimeError if self is frozen
fails:String#slice! with index, length raises a RuntimeError if self is frozen
fails:String#slice! Range raises a RuntimeError on a frozen instance that is modified
fails:String#slice! Range raises a RuntimeError on a frozen instance that would not be modified
fails:String#slice! with Regexp raises a RuntimeError on a frozen instance that is modified
fails:String#slice! with Regexp raises a RuntimeError on a frozen instance that would not be modified
fails:String#slice! with Regexp, index raises a RuntimeError if self is frozen
fails:String#slice! with String raises a RuntimeError if self is frozen
fails:String#slice! with index returns the character given by the character index
fails:String#slice! with index, length returns the substring given by the character offsets
fails:String#slice! Range returns the substring given by the character offsets of the range
fails:String#slice! with Regexp returns the matching portion of self with a multi byte character
fails:String#slice! with Regexp, index returns the encoding aware capture for the given index
