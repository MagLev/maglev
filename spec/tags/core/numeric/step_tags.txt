fails:Numeric#step with [stop, step] returns an Enumerator when passed no block and self > stop
fails:Numeric#step with [stop, step] returns an Enumerator when passed no block and self < stop
fails:Numeric#step with [stop, step] increments self (using #+) until self > stop when step > 0
fails:Numeric#step with [stop, step] decrements self (using #+) until self < stop when step < 0
fails:Numeric#step returns an Enumerator when step is 0
fails:Numeric#step returns an Enumerator when not passed a block and self > stop
fails:Numeric#step returns an Enumerator when not passed a block and self < stop
fails:Numeric#step with [stop, step] increments self using #+ until self > stop when step > 0
fails:Numeric#step with [stop, step] decrements self using #+ until self < stop when step < 0
fails:Numeric#step Numeric#step with [stop, +step] when self, stop or step is a Float is careful about not yielding a value greater than limit
fails:Numeric#step Numeric#step with [stop, -step] when self, stop or step is a Float is careful about not yielding a value smaller than limit
fails:Numeric#step Numeric#step with [stop, +Infinity] yields once if self < stop
fails:Numeric#step Numeric#step with [stop, +Infinity] yields once when stop is Infinity
fails:Numeric#step Numeric#step with [stop, +Infinity] yields once when self equals stop
fails:Numeric#step Numeric#step with [stop, -infinity] yields once if self > stop
fails:Numeric#step Numeric#step with [stop, -infinity] yields once if stop is -Infinity
fails:Numeric#step Numeric#step with [stop, -infinity] yields once when self equals stop
