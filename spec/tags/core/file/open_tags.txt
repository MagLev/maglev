fails:File.open opens file when call with a block (basic case)
fails:File.open opens a file with mode string and block
fails:File.open opens the file when passed mode, num, permissions and block
fails:File.open opens the file when call with fd
fails:File.open opens a file with a file descriptor d and a block
fails:File.open opens a file that no exists when use File::CREAT mode
fails:File.open raises an ArgumentError exception when call with an unknown mode
fails:File.open can't read in a block when call open with File::EXCL mode
fails:File.open can read in a block when call open with File::EXCL mode
fails:File.open truncates the file when passed File::TRUNC mode
fails:File.open can't read in a block when call open with File::TRUNC mode
fails:File.open can't write in a block when call open with File::TRUNC mode
fails:File.open raises an Errorno::EEXIST if the file exists when open with File::RDONLY|File::TRUNC
fails:File.open raises a SystemCallError if passed an invalid Integer type
fails:File.open raises an ArgumentError if passed an invalid string for mode
fails:File.open raises an IOError when read in a block opened with File::RDONLY|File::APPEND mode
fails:File.open raises an IOError if the file exists when open with File::RDONLY|File::APPEND
fails:File.open raises a TypeError if passed a filename that is not a String or Integer type
fails:File.open defaults external_encoding to ASCII-8BIT for binary modes
fails:File.open opens a file with mode num and block
fails:File.open opens a file with mode and permission as nil
fails:File.open uses the second argument as an options Hash
fails:File.open calls #to_hash to convert the second argument to a Hash
fails:File.open on a FIFO opens it as a normal file
