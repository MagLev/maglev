= MagLev
<b>Build Status:</b> {<img src="https://travis-ci.org/MagLev/maglev.png?branch=master-1.9" alt="Build Status" />}[https://travis-ci.org/MagLev/maglev]

== Minimum Requirements
* 64-bit hardware. There are no plans for a 32-bit version.
* 64-bit Linux, Mac OS X, or Solaris X86 operating system
* a version of ruby and rake to use during installation
* root access so you can increase default shared memory settings (only during initial install)

== Install MagLev
There are several ways to install MagLev:
* Use the installer
* Install with Ruby Version Manager (RVM)
* Install with ruby-build/rbenv
* Install from GitHub

=== Install a specific version of MagLev from a .tar.gz archive

1. Download and unzip
   {MagLev-installer.zip}[http://glass-downloads.gemstone.com/maglev/MagLev-installer.zip]
1. Run
     ./installMaglev.sh [VERSION]
   Where VERSION is the specific MagLev revsion you wish to install, e.g. 1.0.0

   <tt>installMaglev.sh</tt> runs one-time machine checks and configuration
   that ensure your hardware will run MagLev.  These mostly relate to
   shared memory settings. It's safe to run multiple times and it won't
   overwrite things it's already done.

The installer is somewhat verbose. That's so you can more easily debug
installation problems.

Note: Reverting to an older version is as simple as stopping MagLev,
changing <tt>$MAGLEV_HOME</tt> to point to the prior version, and
restarting.

=== Install with Ruby Version Manager (RVM)

{RVM}[http://rvm.beginrescueend.com] is useful if you want to compare
behavior of various Ruby implementations or versions of MagLev.  Install
using:
  rvm install maglev

See the {rvm home page}[http://rvm.beginrescueend.com] for details of using
RVM.

RVM will automatically start a MagLev server when you <tt>rvm use
maglev</tt>.  That server is left running if you <tt>rvm use
any_other_Ruby</tt>.

To stop your MagLev server:
  rvm use maglev
  maglev stop

<b>Note:</b> <tt>maglev stop</tt> will only stop the version of MagLev currently in use.
If you're using more than one, you'll have to <tt>maglev stop</tt> each of them -- e.g.
  rvm use maglev-1.0.0
  maglev stop
  rvm use maglev-head
  maglev stop

<b>ProTip:</b> To kill all the MagLev servers rather than shut them down gracefully, run
<tt>ps -ef | grep /sys/stoned</tt> and kill the <tt>stoned</tt> processes that show up.
It takes a short time before they shut down, as they do a bit of cleanup first.

<b>Note:</b> When running rake from MagLev, you cannot perform tasks which affect
MagLev itself, like <tt>rake maglev:stop</tt>. You have to use the <tt>bin/maglev</tt>
shell script instead.

=== Install with ruby-build/rbenv

{ruby-build}[https://github.com/sstephenson/ruby-build] is a plugin for {rbenv}[https://github.com/sstephenson/rbenv] 
that compiles and installs different Ruby implementations on Unix-like systems. 
rbenv lets you switch among different implementations of Ruby easily.

You can install MagLev with rbenv:

  rbenv install maglev-1.0.0

or you can use ruby-build to install MagLev standalone:

  ruby-build maglev-1.0.0 ~/local/maglev

<b>Note:</b> Change <tt>~/local/maglev</tt> to wherever you want MagLev installed.

ruby-build basically runs <tt>install.sh</tt> with some friendly output.

You will have to start and stop the MagLev server using

  maglev start
  maglev stop

The <b>ProTip</b> above for RVM still applies.

=== Install from GitHub

This version is best for MagLev contributors and for developers who want to
live on the bleeding edge or use git functionality. It can be less stable
than the .tar.gz version.

Create a new directory on a local (not NFS) file system to hold the
MagLev source tree and other files. Change to that directory, then:

1. Clone the MagLev github repository
     git clone git://github.com/MagLev/maglev.git
1. Install the VM.  If this is the first time you're installing MagLev,
   run:
     ./install.sh
   If you've already run <tt>installMaglev.sh</tt> on the machine, then you
   can use the update script:
     ./update.sh

To use MagLev, you need to run <tt>install.sh</tt> at least once.  After
that, every time you <tt>git pull</tt>, you need to run <tt>update.sh</tt>
to ensure you have the corresponding GemStone 3.x binaries. Otherwise, you
might get version skew that prevents MagLev from running correctly.  Watch
{@MagLev}[https://twitter.com/maglev] for any 'git only' updates, 
but if you're more than one update behind you still might need to run 
<tt>update.sh</tt>.  You don't need to know a version number to install. 
The installer/updater figures that out from the version.txt file.

You'll have all the functionality of git, but unless you create a new
clone for each release, you may be unable to revert to an earlier version.
Why? The install/update script creates a new copy of the MagLev data
repository including persistent kernel code. The scripts make one level of
backup, but we are not providing migration scripts.
